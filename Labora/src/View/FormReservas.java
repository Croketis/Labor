/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.CTRLReserva;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Carlos
 */
public class FormReservas extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FormReservas.class.getName());

    CTRLReserva ctrl;
    /**
     * Creates new form FormReservas
     */
    public FormReservas() {
        initComponents();
        ctrl = new CTRLReserva();
        ctrl.mostrarReservas(jTable1);
        jTable1.setDefaultEditor(Object.class, null);
        this.setLocationRelativeTo(null);
        configurarEventosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIDPas = new javax.swing.JTextField();
        txtAsRes = new javax.swing.JTextField();
        txtIDVuel = new javax.swing.JTextField();
        txtPrecTot = new javax.swing.JTextField();
        btnAgg = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnVol = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("FreeSans", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestión de reservas");

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Reserva", "Código Reserva", "ID Pasajero", "ID Vuelo", "Fecha Reserva", "Estado", "Asientos reservados", "Precio"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("ID Pasajero");

        jLabel3.setText("ID Vuelo");

        jLabel4.setText("Asientos reservados");

        jLabel5.setText("Precio Total");

        txtIDPas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDPasActionPerformed(evt);
            }
        });

        txtAsRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAsResActionPerformed(evt);
            }
        });

        txtIDVuel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDVuelActionPerformed(evt);
            }
        });

        txtPrecTot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecTotActionPerformed(evt);
            }
        });

        btnAgg.setText("Agregar");
        btnAgg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAggActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnDel.setText("Eliminar");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnVol.setText("Volver");
        btnVol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscar)
                        .addGap(146, 146, 146)
                        .addComponent(btnDel)
                        .addGap(146, 146, 146)
                        .addComponent(btnVol)
                        .addGap(68, 68, 68))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtIDPas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtAsRes, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIDVuel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecTot, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(101, 101, 101))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtIDPas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDVuel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtAsRes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecTot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgg)
                    .addComponent(btnBuscar)
                    .addComponent(btnDel)
                    .addComponent(btnVol))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDPasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDPasActionPerformed
        txtIDVuel.requestFocus();
    }//GEN-LAST:event_txtIDPasActionPerformed

    private void btnAggActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAggActionPerformed
        if (!validarCampos()) {
            return;
        }
        
        try {
            ctrl.agregar(txtIDPas, txtIDVuel, txtAsRes, txtPrecTot);
            ctrl.mostrarReservas(jTable1);
            limpiarCampos();
            txtIDPas.requestFocus();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al agregar reserva: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAggActionPerformed

    private void btnVolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolActionPerformed
        MenuPrincipal MP = new MenuPrincipal();
        MP.setVisible(true);
        MP.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnVolActionPerformed

    private void txtAsResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAsResActionPerformed
       txtPrecTot.requestFocus();
    }//GEN-LAST:event_txtAsResActionPerformed

    private void txtIDVuelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDVuelActionPerformed
        txtAsRes.requestFocus();
    }//GEN-LAST:event_txtIDVuelActionPerformed

    private void txtPrecTotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecTotActionPerformed
        if (validarCampos()) {
            btnAggActionPerformed(evt);
        }
    }//GEN-LAST:event_txtPrecTotActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String codigo = JOptionPane.showInputDialog(this, "Ingrese el código de la reserva:");
        if (codigo != null && !codigo.trim().isEmpty()) {
            var reserva = ctrl.buscarPorCodigo(new javax.swing.JTextField(codigo));
            if (reserva != null) {
                txtIDPas.setText(String.valueOf(reserva.getIdPasajero()));
                txtIDVuel.setText(String.valueOf(reserva.getIdVuelo()));
                txtAsRes.setText(String.valueOf(reserva.getAsientosReservados()));
                txtPrecTot.setText(reserva.getPrecioTotal().toString());
                
                JOptionPane.showMessageDialog(this, 
                    "Reserva encontrada:\n" +
                    "Código: " + reserva.getCodigoReserva() + "\n" +
                    "Estado: " + reserva.getEstado() + "\n" +
                    "Fecha: " + (reserva.getFechaReserva() != null ? reserva.getFechaReserva() : "N/A"));
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        String codigoReserva = JOptionPane.showInputDialog(this, "Ingrese el código de la reserva a cancelar:");
        if (codigoReserva != null && !codigoReserva.trim().isEmpty()) {
            int confirmacion = JOptionPane.showConfirmDialog(
                this, 
                "¿Está seguro de cancelar esta reserva?", 
                "Confirmar cancelación", 
                JOptionPane.YES_NO_OPTION
            );
            if (confirmacion == JOptionPane.YES_OPTION) {
                try {
                    javax.swing.JTextField txtCodigo = new javax.swing.JTextField(codigoReserva);
                    ctrl.cancelarReserva(txtCodigo);
                    ctrl.mostrarReservas(jTable1);
                    limpiarCampos();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error al cancelar reserva: " + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnDelActionPerformed

        private boolean validarCampos() {
        if (txtIDPas.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El ID del pasajero no puede estar vacío");
            txtIDPas.requestFocus();
            return false;
        }

        if (txtIDVuel.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El ID del vuelo no puede estar vacío");
            txtIDVuel.requestFocus();
            return false;
        }

        if (txtAsRes.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Los asientos reservados no pueden estar vacíos");
            txtAsRes.requestFocus();
            return false;
        }

        if (txtPrecTot.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El precio total no puede estar vacío");
            txtPrecTot.requestFocus();
            return false;
        }
        try {
            int idPasajero = Integer.parseInt(txtIDPas.getText().trim());
            if (idPasajero <= 0) {
                JOptionPane.showMessageDialog(this, "El ID del pasajero debe ser un número positivo");
                txtIDPas.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID del pasajero debe ser un número válido");
            txtIDPas.requestFocus();
            return false;
        }

        try {
            int idVuelo = Integer.parseInt(txtIDVuel.getText().trim());
            if (idVuelo <= 0) {
                JOptionPane.showMessageDialog(this, "El ID del vuelo debe ser un número positivo");
                txtIDVuel.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID del vuelo debe ser un número válido");
            txtIDVuel.requestFocus();
            return false;
        }

        try {
            int asientos = Integer.parseInt(txtAsRes.getText().trim());
            if (asientos <= 0) {
                JOptionPane.showMessageDialog(this, "Los asientos reservados deben ser un número positivo");
                txtAsRes.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Los asientos reservados deben ser un número válido");
            txtAsRes.requestFocus();
            return false;
        }

        try {
            double precio = Double.parseDouble(txtPrecTot.getText().trim());
            if (precio <= 0) {
                JOptionPane.showMessageDialog(this, "El precio total debe ser un número positivo");
                txtPrecTot.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El precio total debe ser un número válido");
            txtPrecTot.requestFocus();
            return false;
        }

        return true;
    }
    
    private void limpiarCampos() {
        txtIDPas.setText("");
        txtIDVuel.setText("");
        txtAsRes.setText("");
        txtPrecTot.setText("");
        jTable1.clearSelection();
    }
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada != -1) {
            try {
                
                Object idPasajero = jTable1.getValueAt(filaSeleccionada, 2);
                Object idVuelo = jTable1.getValueAt(filaSeleccionada, 3);
                Object asientos = jTable1.getValueAt(filaSeleccionada, 6);
                Object precio = jTable1.getValueAt(filaSeleccionada, 7);
                
                txtIDPas.setText(idPasajero != null ? idPasajero.toString() : "");
                txtIDVuel.setText(idVuelo != null ? idVuelo.toString() : "");
                txtAsRes.setText(asientos != null ? asientos.toString() : "");
                
                if (precio != null) {
                    String precioStr = precio.toString().replace("$", "");
                    txtPrecTot.setText(precioStr);
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al cargar datos: " + e.getMessage());
            }
        }
    }
    
    private void configurarEventosTabla() {
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgg;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnVol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAsRes;
    private javax.swing.JTextField txtIDPas;
    private javax.swing.JTextField txtIDVuel;
    private javax.swing.JTextField txtPrecTot;
    // End of variables declaration//GEN-END:variables
}
