/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.CTRLVuelo;
import Controller.CTRLAeropuerto;
import Controller.CTRLAvion;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Carlos
 */
public class FormVuelos extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FormVuelos.class.getName());

    CTRLVuelo ctrlVuelo;
    CTRLAeropuerto ctrlAeropuerto;
    CTRLAvion ctrlAvion;
    /**
     * Creates new form FormVuelos
     */
    public FormVuelos() {
        initComponents();
        ctrlVuelo = new CTRLVuelo();
        ctrlAeropuerto = new CTRLAeropuerto();
        ctrlAvion = new CTRLAvion();
        ctrlVuelo.mostrarVuelos(jTable1);
        ctrlAeropuerto.cargarComboBox(comboOrigen);
        ctrlAeropuerto.cargarComboBox(comboDestino);
        ctrlAvion.cargarComboBox(comboAvion);
        jTable1.setDefaultEditor(Object.class, null);
        this.setLocationRelativeTo(null);
        configurarEventosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNumVuelo = new javax.swing.JTextField();
        txtFeSalida = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtFeLle = new javax.swing.JTextField();
        txtAsDisp = new javax.swing.JTextField();
        btnAgg = new javax.swing.JButton();
        btnEd = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnVol = new javax.swing.JButton();
        comboOrigen = new javax.swing.JComboBox<>();
        comboDestino = new javax.swing.JComboBox<>();
        comboAvion = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("FreeSans", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestión de Vuelos");

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setText("Número vuelo");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NUM Vuelo", "Origen", "Destino", "Salida", "Llegada", "Precio"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("Origen");

        jLabel4.setText("Fecha salida");

        jLabel5.setText("Precio");

        txtNumVuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumVueloActionPerformed(evt);
            }
        });

        txtFeSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFeSalidaActionPerformed(evt);
            }
        });

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        jLabel6.setText("Avion");

        jLabel7.setText("Destino");

        jLabel8.setText("Fecha llegada");

        jLabel9.setText("Asientos Disp");

        txtFeLle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFeLleActionPerformed(evt);
            }
        });

        txtAsDisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAsDispActionPerformed(evt);
            }
        });

        btnAgg.setText("Agregar");
        btnAgg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAggActionPerformed(evt);
            }
        });

        btnEd.setText("Editar");
        btnEd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdActionPerformed(evt);
            }
        });

        btnDel.setText("Eliminar");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnVol.setText("Volver");
        btnVol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolActionPerformed(evt);
            }
        });

        comboOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOrigenActionPerformed(evt);
            }
        });

        comboDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDestinoActionPerformed(evt);
            }
        });

        comboAvion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAvionActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(153, 153, 153));
        jLabel10.setText("(YYYY-MM-DD HH-MM)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNumVuelo, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                            .addComponent(txtFeSalida)
                            .addComponent(txtPrecio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFeLle)
                    .addComponent(txtAsDisp)
                    .addComponent(comboDestino, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboAvion, 0, 224, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(btnAgg)
                .addGap(143, 143, 143)
                .addComponent(btnEd)
                .addGap(135, 135, 135)
                .addComponent(btnDel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(btnVol)
                .addGap(89, 89, 89))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNumVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(comboAvion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(comboOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFeSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtFeLle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtAsDisp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgg)
                    .addComponent(btnEd)
                    .addComponent(btnDel)
                    .addComponent(btnVol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 853, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAggActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAggActionPerformed
    if (!validarCampos()) {
        return;
    }
    
    try {
        ctrlVuelo.agregar(
            txtNumVuelo, comboOrigen, comboDestino, comboAvion, txtFeSalida, txtFeLle, txtPrecio, txtAsDisp 
        );
        ctrlVuelo.mostrarVuelos(jTable1);
        limpiarCampos();
        txtNumVuelo.requestFocus();
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al agregar vuelo: " + e.getMessage());
    }
    }//GEN-LAST:event_btnAggActionPerformed

    private void btnVolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolActionPerformed
        MenuPrincipal MP = new MenuPrincipal();
        MP.setVisible(true);
        MP.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnVolActionPerformed

    private void txtNumVueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumVueloActionPerformed
        comboOrigen.requestFocus();
    }//GEN-LAST:event_txtNumVueloActionPerformed

    private void comboOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOrigenActionPerformed
        comboDestino.requestFocus();
    }//GEN-LAST:event_comboOrigenActionPerformed

    private void txtFeSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFeSalidaActionPerformed
        txtFeLle.requestFocus();
    }//GEN-LAST:event_txtFeSalidaActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        txtAsDisp.requestFocus();
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void comboAvionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAvionActionPerformed
        txtFeSalida.requestFocus();
    }//GEN-LAST:event_comboAvionActionPerformed

    private void comboDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDestinoActionPerformed
        comboAvion.requestFocus();
    }//GEN-LAST:event_comboDestinoActionPerformed

    private void txtFeLleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFeLleActionPerformed
        txtPrecio.requestFocus();
    }//GEN-LAST:event_txtFeLleActionPerformed

    private void txtAsDispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAsDispActionPerformed
      if (validarCampos()) {
            btnAggActionPerformed(evt);
        }
    }//GEN-LAST:event_txtAsDispActionPerformed

    private void btnEdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdActionPerformed
           int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un vuelo para editar");
            return;
        }
        
        if (!validarCampos()) {
            return;
        }
        
        try {
            int idVuelo = (int) jTable1.getValueAt(filaSeleccionada, 0);
        ctrlVuelo.actualizar(idVuelo, txtNumVuelo, comboOrigen, comboDestino, comboAvion, txtFeSalida, txtFeLle, txtPrecio, txtAsDisp);
            
            ctrlVuelo.mostrarVuelos(jTable1);
            limpiarCampos();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar vuelo: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEdActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un vuelo para eliminar");
            return;
        }
        
        int confirmacion = JOptionPane.showConfirmDialog(
            this, 
            "¿Está seguro de eliminar este vuelo?", 
            "Confirmar eliminación", 
            JOptionPane.YES_NO_OPTION
        );
        
        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                int idVuelo = (int) jTable1.getValueAt(filaSeleccionada, 0);
                ctrlVuelo.eliminar(idVuelo);
                
                ctrlVuelo.mostrarVuelos(jTable1);
                limpiarCampos();
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar vuelo: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnDelActionPerformed

     private boolean validarCampos() {
        if (txtNumVuelo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El número de vuelo no puede estar vacío");
            txtNumVuelo.requestFocus();
            return false;
        }

        if (comboOrigen.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un aeropuerto de origen");
            comboOrigen.requestFocus();
            return false;
        }

        if (comboDestino.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un aeropuerto de destino");
            comboDestino.requestFocus();
            return false;
        }

        if (comboOrigen.getSelectedItem().equals(comboDestino.getSelectedItem())) {
            JOptionPane.showMessageDialog(this, "El aeropuerto de origen y destino deben ser diferentes");
            comboDestino.requestFocus();
            return false;
        }

        if (comboAvion.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un avión");
            comboAvion.requestFocus();
            return false;
        }

        if (txtFeSalida.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "La fecha de salida no puede estar vacía");
            txtFeSalida.requestFocus();
            return false;
        }

        if (txtFeLle.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "La fecha de llegada no puede estar vacía");
            txtFeLle.requestFocus();
            return false;
        }

        if (txtPrecio.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El precio no puede estar vacío");
            txtPrecio.requestFocus();
            return false;
        }

        if (txtAsDisp.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Los asientos disponibles no pueden estar vacíos");
            txtAsDisp.requestFocus();
            return false;
        }

        try {
            double precio = Double.parseDouble(txtPrecio.getText().trim());
            if (precio <= 0) {
                JOptionPane.showMessageDialog(this, "El precio debe ser mayor a 0");
                txtPrecio.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El precio debe ser un número válido");
            txtPrecio.requestFocus();
            return false;
        }

        try {
            int asientos = Integer.parseInt(txtAsDisp.getText().trim());
            if (asientos < 0) {
                JOptionPane.showMessageDialog(this, "Los asientos no pueden ser negativos");
                txtAsDisp.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Los asientos deben ser un número válido");
            txtAsDisp.requestFocus();
            return false;
        }

        String fechaSalida = txtFeSalida.getText().trim();
        String fechaLlegada = txtFeLle.getText().trim();
        
        if (!fechaSalida.matches("\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}")) {
            JOptionPane.showMessageDialog(this, "Formato de fecha de salida incorrecto. Use: YYYY-MM-DD HH:MM\nEjemplo: 2025-12-25 14:30");
            txtFeSalida.requestFocus();
            return false;
        }
        
        if (!fechaLlegada.matches("\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}")) {
            JOptionPane.showMessageDialog(this, "Formato de fecha de llegada incorrecto. Use: YYYY-MM-DD HH:MM\nEjemplo: 2025-12-25 18:45");
            txtFeLle.requestFocus();
            return false;
        }
        
        return true;
    }
    
    private void limpiarCampos() {
        txtNumVuelo.setText("");
        txtFeSalida.setText("");
        txtFeLle.setText("");
        txtPrecio.setText("");
        txtAsDisp.setText("");

        if (comboOrigen.getItemCount() > 0) {
            comboOrigen.setSelectedIndex(0);
        }
        if (comboDestino.getItemCount() > 0) {
            comboDestino.setSelectedIndex(0);
        }
        if (comboAvion.getItemCount() > 0) {
            comboAvion.setSelectedIndex(0);
        }
        
        jTable1.clearSelection();
    }
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada != -1) {
            txtNumVuelo.setText(jTable1.getValueAt(filaSeleccionada, 1).toString());
            String origen = jTable1.getValueAt(filaSeleccionada, 2).toString();
            String destino = jTable1.getValueAt(filaSeleccionada, 3).toString();
            seleccionarEnCombo(comboOrigen, origen);
            seleccionarEnCombo(comboDestino, destino);  
            txtFeSalida.setText(jTable1.getValueAt(filaSeleccionada, 5).toString());
            txtFeLle.setText(jTable1.getValueAt(filaSeleccionada, 6).toString());
            String precio = jTable1.getValueAt(filaSeleccionada, 7).toString();
            if (precio.startsWith("$")) {
                precio = precio.substring(1);
            }
            txtPrecio.setText(precio);
            
            txtAsDisp.setText(jTable1.getValueAt(filaSeleccionada, 8).toString());
        }
    }
    
    private void seleccionarEnCombo(javax.swing.JComboBox<String> combo, String valor) {
        for (int i = 0; i < combo.getItemCount(); i++) {
            String item = combo.getItemAt(i);
            if (item != null && item.contains(valor)) {
                combo.setSelectedIndex(i);
                break;
            }
        }
    }
    
    private void configurarEventosTabla() {
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgg;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEd;
    private javax.swing.JButton btnVol;
    private javax.swing.JComboBox<String> comboAvion;
    private javax.swing.JComboBox<String> comboDestino;
    private javax.swing.JComboBox<String> comboOrigen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAsDisp;
    private javax.swing.JTextField txtFeLle;
    private javax.swing.JTextField txtFeSalida;
    private javax.swing.JTextField txtNumVuelo;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
